# Form implementation generated from reading ui file 'segunda_ventana.ui'
#
# Created by: PyQt6 UI code generator 6.4.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
import sqlite3

def listToString(s):
    str1 = ""
    for ele in s:
        if ele == s[4]:
            str1 += ele
        else:
            str1 += ele+','

    return str1

class Ui_SegundaVentana(object):
    def setupUi(self, SegundaVentana):
        SegundaVentana.setObjectName("SegundaVentana")
        SegundaVentana.resize(1004, 800)
        SegundaVentana.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(SegundaVentana)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(330, 130, 75, 23))
        self.pushButton.setAutoFillBackground(False)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(330, 170, 75, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(330, 210, 91, 23))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(320, 250, 111, 23))
        self.pushButton_4.setObjectName("pushButton_4")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(-10, 0, 1021, 1060))
        self.label.setStyleSheet("background-image: url(.//FONDO//Messi2.jpg);\n""background-repeat: no-repeat;\n"
                                 ""
"")
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap(".//FONDO//Messi2.jpg"))
        self.label.setScaledContents(True)
        self.label.setWordWrap(False)
        self.label.setObjectName("label")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(100, 280, 835, 151))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(4)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(160)
        self.label.raise_()
        self.pushButton.raise_()
        self.pushButton_2.raise_()
        self.pushButton_3.raise_()
        self.pushButton_4.raise_()
        self.tableWidget.raise_()
        self.loadProducts()
        SegundaVentana.setCentralWidget(self.centralwidget)

        self.retranslateUi(SegundaVentana)
        QtCore.QMetaObject.connectSlotsByName(SegundaVentana)
        self.pushButton_2.clicked.connect(self.agregarfila)
        self.pushButton_3.clicked.connect(self.deleterow)
        self.pushButton_4.clicked.connect(self.readDataTable)

    def insertRowInDB(self, rowData):
        conn = sqlite3.connect("MiCLoudPrivada")
        c = conn.cursor()
        querySrt = """("INSERT INTO usuariosFTP (usuario, contraseña, carpeta, permisos, almacenamiento)"""
        self.c.execute(querySrt, rowData)
        self.c.commit()

    def agregarfila(self):
        currentRow = self.tableWidget.rowCount()
        self.tableWidget.insertRow(currentRow)
    def deleterow(self):
        if self.tableWidget.rowCount() >0:
            filaactual = self.tableWidget.currentRow()
            self.tableWidget.removeRow(filaactual)
    def readDataTable(self):
        conn = sqlite3.connect("MiCLoudPrivada")
        c = conn.cursor()
        rowCount=self.tableWidget.rowCount()
        columnCount=self.tableWidget.columnCount()
        contador = 0
        c.execute("DELETE FROM usuariosFTP")
        for row in range(rowCount):
            rowData = []
            for column in range(columnCount):
                widgetItem = self.tableWidget.item(row,column)
                if(widgetItem and widgetItem.text):
                    #rowData = rowData +','+ widgetItem.text()
                    rowData.append(widgetItem.text())

                else:
                    #rowData= rowData +','+ 'NULL'
                    rowData.append('')
                    #rowData1=listToString(rowData)
                    print(rowData)
                    #print(rowData1)
                    print (contador)
                    #self.insertRowInDB(rowData1)
                    #c.execute("DELETE FROM usuariosFTP")
                    c.execute("INSERT INTO usuariosFTP VALUES (?, ?, ?, ?, ?)", (rowData))
                    conn.commit()
                    #conn.close()
                    contador = contador + 1


    def loadProducts(self):
        conn = sqlite3.connect("MiCLoudPrivada")
        c = conn.cursor()
        sqlquery = "SELECT usuario,contraseña,carpeta,permisos,almacenamiento FROM usuariosFTP"

        sqlxd = "SELECT usuario from usuariosFTP"
        c.execute(sqlxd)
        i = c.fetchall()
        cont = 0

        for n in i:

            print(n)
            cont = cont + 1



        self.tableWidget.setRowCount(cont)
        tablerow = 0
        for row in c.execute(sqlquery):
            self.tableWidget.setItem(tablerow, 0,QtWidgets.QTableWidgetItem(row[0]))
            self.tableWidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(row[1]))
            self.tableWidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(row[2]))
            self.tableWidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(row[3]))
            tablerow+=1


    def retranslateUi(self, SegundaVentana):
        _translate = QtCore.QCoreApplication.translate
        SegundaVentana.setWindowTitle(_translate("SegundaVentana", "MainWindow"))
        self.pushButton.setText(_translate("SegundaVentana", "Editar Usuario"))
        self.pushButton_2.setText(_translate("SegundaVentana", "Crear Usuario"))
        self.pushButton_3.setText(_translate("SegundaVentana", "Eliminar Usuario"))
        self.pushButton_4.setText(_translate("SegundaVentana", "Obtener Usuarios"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("SegundaVentana", "Nombre"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("SegundaVentana", "Contraseña"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("SegundaVentana", "Carpeta"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("SegundaVentana", "Permisos"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("SegundaVentana", "Almacenamiento"))



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    SegundaVentana = QtWidgets.QMainWindow()
    ui = Ui_SegundaVentana()
    ui.setupUi(SegundaVentana)
    SegundaVentana.show()
    sys.exit(app.exec())
